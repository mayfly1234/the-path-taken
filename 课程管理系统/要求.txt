5. 教学计划编制问题
【问题描述】
大学的每个专业都要制定教学计划。假设任何专业都有固定的学习年限，每
学年含两学期，每学期的时间长度和学分上限值均相等。每个专业开设的课程都
是确定的，而且课程在开设时间的安排必须满足先修关系。每门课程有哪些先修
课程是确定的，可以有任意多门，也可以没有。每门课恰好占一个学期。试在这
样的前提下设计一个教学计划编制程序。
【基本要求】
(1)输入参数包括：学期总数，一学期的学分上限，每门课的课程号(固定占
3 位的字母数字串)、课程名、学分和直接先修课的课程号。
(2)允许用户指定下列两种编排策略之一：一是使学生在各学期中的学习负
担尽量均匀；二是使课程尽可能地集中在前几个学期中。
(3)若根据给定的条件问题无解，则报告适当的信息，否则将教学计划输出
到用户指定的文件中。计划的表格格式自行设计。
【测试数据】
学期总数：4；学分上限：20；该专业共开设 12 门课，课程号从 C01 到 C12，
学分顺序为 2，3，4，3，2，3，4，4，7，5，2，3。先修关系见教科书图 7.26。
///////////////////////////////////////////////////////
二、概要设计
1. 程序使用的抽象数据类型
为实现上述程序功能，需要两个抽象数据类型：图和线性表。
1）线性表的抽象数据类型定义为：
ADT  LinearList
{
数据对象：D = {ai|ai∈ElemSet,i=1,2,…,n,n≥0}
数据关系：R = {<ai-1,ai>| ai-1,ai∈D,i=2,…,n}
基本操作：
Listinit(&L)
操作结果：构造一个空的线性表L。
ListAdd (&L)
初始条件：线性表L已存在。
操作结果：在有线性表L的未尾插入新节点并输入元素。
ListVisit(&L)
初始条件：线性表L已存在。
操作结果：遍历线性表并输出各个节点的课程及后继课程。
}ADT LinearList
2）图的抽象数据类型定义为：
ADT Graph
{
数据对象：V是具有相同特征的数据元素的集合，称为顶点集；
数据关系：
R={VR}
VR={<v,w>|v,w属于V且P(v,w)<v,w>表示从v到w的弧，
谓词P{(c,w)定义了弧<v,w>的意义或信息}
基本操作：
GraphCreate(&G,V,VR)
初始条件：V是图的顶点集，VR是图中弧的集合。
操作条件: 按V和VR的定义构造图G。
GraphAddNode(&G,v,&L)
初始条件：图G存在，v是G中某个顶点,L是线性表的一个节点。
操作结果：将线性表中的内容输入到图的顶点中，包括课程的元素，该课程的后续节点。
BFSTraverse(G)
初始条件：图G存在。
操作结果：对图进行广度优先遍历，遍历过程中每个顶点访问一次。
}